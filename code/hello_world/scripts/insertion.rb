# Objective:
#   register raw data and index
#
# Creater: Yu-Chang Ho
# Latest Update: 2018.07.27 14:30

require 'httpclient'
require 'json'
require 'yaml'

client = HTTPClient.new

config = YAML.load_file('config.yml')
# Ref. https://stackoverflow.com/questions/21422494/reading-and-updating-yaml-file-by-ruby-code
fed = config['fed']

base_uri = 'http://' + fed + ':30013'

# raw-data registration
api = '/sink_agent/api/rawdata'
header = { 'Content-type' => 'application/octet-stream' }
uri = base_uri + api
body = open( './test_data.json' , 'r' )

# register the raw-data to sink-agent
res = client.post(uri, body, header)
# index registration
if res.code != 200
    # if error presented
    puts res.body
    puts "Raw data registration failed with code: " + res.code
    exit!
end

puts "Raw data registration succeed, begin index registration......"

api = '/sink_agent/api/put_idx'
header = { 'Content-type' => 'application/json' }
uri = base_uri + api
# retrieve the data_id generated by the sink-agent
data_id = res.body['data_id']

payload = Hash.new
payload[:sink_info] = {:data_id => data_id}
payload[:dir_keys] = ["location", "device_id"]
payload[:meta] = {
    :location => config['location'],
    :device_id => config['device_id'],
    :temp => 27.5,
    :humid => 99.5
}
payload[:gen_time] = Time.now.to_i

res = client.post(uri, payload.to_json, header)
puts "code=#{res.code}"
puts res.body
# [ucdavis@hippos-fed ~/Fujitsu/scripts]$ ruby insertion.rb
#   Raw data registration succeed, begin index registration......
#   {:sink_info=>{:data_id=>"data_id"}, :dir_keys=>["location", "device_id"], :meta=>{:location=>"Davis, CA, USA", :device_id=>"dev-01", :te
#   mp=>25.5, :humid=>60}, :gen_time=>1532728951}
#   code=200
#   {"result":false,"idx_id":null}
# [ucdavis@hippos-fed ~/Fujitsu/scripts]$ date
#   Fri Jul 27 15:02:45 PDT 2018